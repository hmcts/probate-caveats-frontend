#!groovy

properties([
        pipelineTriggers([cron('00 20 * * *')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'URL_TO_TEST', defaultValue: 'https://probate.aat.platform.hmcts.net', description: 'The URL you want to run these tests against'),
        ])
])

@Library("Infrastructure") _

String product = "probate"
String component = "caveats-fe"

def secrets = [
  'probate-${env}': [
          secret('testIdamBaseUrl', 'IDAM_API_URL'),
          secret('testSurvey', 'SURVEY'),
          secret('testsurveyEndOfApplication', 'SURVEY_END_OF_APPLICATION'),
          secret('testUseGovPay', 'USE_GOV_PAY'),
          secret('testValidationServiceUrl', 'TEST_VALIDATION_SERVICE_URL'),
          secret('caveat-user-name', 'CAVEAT_USER_EMAIL'),
          secret('caveat-user-password', 'CAVEAT_USER_PASSWORD')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withNightlyPipeline("nodejs", product, component) {
    env.TEST_URL = params.URL_TO_TEST
    env.TEST_E2E_URL = params.URL_TO_TEST

    loadVaultSecrets(secrets)
    enableFullFunctionalTest()
    enableCrossBrowserTest()
    //enableSecurityScan()
    after('build') {
        sh 'mkdir -p functional-output'
        sh 'yarn setup'
    }

    after('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    after('crossBrowserTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    //    enableSlackNotifications('#probate-qa')  // can be turned back on once the overnight functionality is working fully
}
